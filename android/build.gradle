buildscript {
    ext.kotlin_version = '1.9.20' // Updated from 1.8.10 to a newer compatible version
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.3.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:4.3.14"
    }
}

// Define a property for the image_gallery_saver namespace fix
ext {
    imageGallerySaverNamespace = "com.example.imagegallerysaver"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    
    // More aggressive fix for image_gallery_saver plugin - applied at project creation time
    if (project.name == 'image_gallery_saver') {
        // Apply these configurations as early as possible
        project.plugins.withId('com.android.library') {
            println "🛠️ Applying early namespace fix to image_gallery_saver plugin..."
            
            // This block is executed immediately when the Android plugin is applied
            android.namespace = rootProject.ext.imageGallerySaverNamespace
            
            // Force namespace to be set before the project is configured
            project.beforeEvaluate {
                if (project.extensions.findByName('android')) {
                    project.android.namespace = rootProject.ext.imageGallerySaverNamespace
                    println "✅ Early namespace fix applied to image_gallery_saver"
                }
            }
        }
    }
}

rootProject.buildDir = "../build"

// Consolidate all subprojects configurations into a single block
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    
    // Apply buildConfig = true to all Android projects
    afterEvaluate {
        project -> if (project.hasProperty('android')) {
            android {
                buildFeatures {
                    buildConfig true
                }
            }
        }
    }
    
    // Original dependency on app
    project.evaluationDependsOn(":app")
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}